def parse_user_input(text):
    """
    –ü–∞—Ä—Å–∏—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥.
    –†–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –∫–∞–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã, —Ç–∞–∫ –∏ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –∫–Ω–æ–ø–æ–∫.
    """
    if not text:
        return 'unknown'

    text = text.lower().strip()

    # –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if text in ['–ø—Ä–∏–≤–µ—Ç', '–Ω–∞—á–∞—Ç—å', 'start', 'hello', 'hi', '–±–æ—Ç']:
        return 'start'
    elif text in ['–¥–∞–ª—å—à–µ', '—Å–ª–µ–¥—É—é—â–∏–π', 'next', '–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å']:
        return 'next'
    elif text in ['–∏–∑–±—Ä–∞–Ω–Ω–æ–µ', 'favorites', '–º–æ—ë –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', '–º–æ–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', '—Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ']:
        return 'favorites'
    elif text in ['–¥–æ–±–∞–≤–∏—Ç—å', '–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', '–≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', '–ª–∞–π–∫']:
        return 'add_to_favorites'
    elif text in ['–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', '–º–µ–Ω—é', '–Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', '—Ä–µ—Å—Ç–∞—Ä—Ç']:
        return 'start'
    elif text in ['–ø–æ–º–æ—â—å', 'help', '–∫–æ–º–∞–Ω–¥—ã']:
        return 'help'

    # –ö–æ–º–∞–Ω–¥—ã –∏–∑ –∫–Ω–æ–ø–æ–∫ (—Å —ç–º–æ–¥–∑–∏)
    elif '–¥–∞–ª—å—à–µ' in text or '‚û°Ô∏è' in text or '—Å–ª–µ–¥—É—é—â–∏–π' in text:
        return 'next'
    elif '–∏–∑–±—Ä–∞–Ω–Ω–æ–µ' in text or '‚ù§Ô∏è' in text or '‚≠ê' in text:
        return 'add_to_favorites' if '–≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ' in text or '–¥–æ–±–∞–≤–∏—Ç—å' in text else 'favorites'
    elif '–Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ' in text or 'üîÑ' in text or '—Ä–µ—Å—Ç–∞—Ä—Ç' in text:
        return 'start'
    elif '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' in text or 'üìã' in text or '–º–µ–Ω—é' in text:
        return 'start'
    elif '–ø–æ–º–æ—â—å' in text or '‚ùì' in text:
        return 'help'

    return 'unknown'


def validate_search_params(age, gender, city):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (is_valid, error_message)
    """
    if not age:
        return False, "–í–æ–∑—Ä–∞—Å—Ç –Ω–µ —É–∫–∞–∑–∞–Ω. –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö VK."

    if age < 18:
        return False, "–ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç."

    if age > 100:
        return False, "–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç."

    if gender not in [1, 2]:
        return False, "–ü–æ–ª –Ω–µ —É–∫–∞–∑–∞–Ω –∏–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."

    if not city:
        return False, "–ì–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω. –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö VK."

    return True, ""


def format_profile_message(profile, photos_count=0):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Ñ–∏–ª–µ.
    """
    message = f"üë§ {profile['first_name']} {profile['last_name']}\n"
    message += f"üîó –°—Å—ã–ª–∫–∞: {profile['profile_link']}\n"

    if photos_count > 0:
        message += f"üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {photos_count}\n"

    return message


def format_favorites_list(favorites):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π.
    """
    if not favorites:
        return "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç üò¢"

    message = "‚≠ê –í–∞—à–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:\n\n"
    for i, profile in enumerate(favorites, 1):
        message += f"{i}. {profile.first_name} {profile.last_name}\n"
        message += f"   –°—Å—ã–ª–∫–∞: {profile.profile_link}\n\n"

    return message


def extract_photos_from_json(photos_json):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ –∏–∑ JSON-—Å—Ç—Ä–æ–∫–∏.
    """
    import json
    try:
        if photos_json:
            return json.loads(photos_json)
        return []
    except (json.JSONDecodeError, TypeError):
        return []