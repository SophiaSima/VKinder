# bot/message_handlers.py
from bot.keyboard_utils import get_main_keyboard, get_empty_keyboard, get_favorites_keyboard
from database.db_func import get_or_create_user, add_to_favorites, get_favorites
# –ò–∑–º–µ–Ω–∏—Ç–µ –∏–º–ø–æ—Ä—Ç—ã
from vk_tools.vk_api_func import get_user_info, search_profiles, get_top_photos  # –ë—ã–ª–æ from vk_api.vk_api_func
from vk_tools.vk_tools import parse_user_input  # –ë—ã–ª–æ from vk_api.vk_tools


class BotState:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞"""

    def __init__(self):
        self.user_states = {}  # user_id -> state_data
        self.search_results = {}  # user_id -> [profiles]
        self.current_index = {}  # user_id -> current_profile_index

    def get_user_state(self, user_id):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id not in self.user_states:
            self.user_states[user_id] = {'state': 'start', 'data': {}}
        return self.user_states[user_id]

    def set_user_state(self, user_id, state, data=None):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if data is None:
            data = {}
        self.user_states[user_id] = {'state': state, 'data': data}


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞
bot_state = BotState()


def handle_start(user_id, message_text):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã"""
    user_info = get_user_info(user_id)

    if not user_info:
        return "–ù–µ –º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ VK. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏.", get_empty_keyboard()

    if not user_info.get('city'):
        return "–í –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –Ω–µ —É–∫–∞–∑–∞–Ω –≥–æ—Ä–æ–¥. –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö VK –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", get_empty_keyboard()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    user = get_or_create_user(**user_info)

    # –ò—â–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
    profiles = search_profiles(user_info['age'], user_info['gender'], user_info['city'])

    if not profiles:
        return "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–Ω–∫–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", get_empty_keyboard()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    bot_state.search_results[user_id] = profiles
    bot_state.current_index[user_id] = 0
    bot_state.set_user_state(user_id, 'browsing')

    return show_next_profile(user_id)


def show_next_profile(user_id):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"""
    if user_id not in bot_state.search_results or user_id not in bot_state.current_index:
        return handle_start(user_id, "")

    profiles = bot_state.search_results[user_id]
    current_index = bot_state.current_index[user_id]

    if current_index >= len(profiles):
        return "–ê–Ω–∫–µ—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å! üéâ –ù–∞–∂–º–∏—Ç–µ 'üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ' –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞.", get_main_keyboard()

    profile = profiles[current_index]

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    photos = get_top_photos(profile['vk_id'])

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = f"{profile['first_name']} {profile['last_name']}\n"
    message += f"–°—Å—ã–ª–∫–∞: {profile['profile_link']}\n\n"

    # –§–æ—Ä–º–∏—Ä—É–µ–º attachment –¥–ª—è —Ñ–æ—Ç–æ
    attachment = ','.join(photos) if photos else ""

    return message, get_main_keyboard(), attachment


def handle_add_to_favorites(user_id):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"""
    if user_id not in bot_state.search_results or user_id not in bot_state.current_index:
        return "–°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫!", get_main_keyboard()

    current_index = bot_state.current_index[user_id]
    profile = bot_state.search_results[user_id][current_index]

    success = add_to_favorites(user_id, profile['vk_id'])

    if success:
        return "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!", get_main_keyboard()
    else:
        return "‚ùå –£–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!", get_main_keyboard()


def handle_show_favorites(user_id):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    favorites = get_favorites(user_id)

    if not favorites:
        return "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç üò¢", get_main_keyboard()

    message = "‚≠ê –í–∞—à–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:\n\n"
    for i, profile in enumerate(favorites, 1):
        message += f"{i}. {profile.first_name} {profile.last_name}\n"
        message += f"   –°—Å—ã–ª–∫–∞: {profile.profile_link}\n\n"

    return message, get_favorites_keyboard()


# bot/message_handlers.py
def handle_message(user_id, message_text):
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: '{message_text}' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

    command = parse_user_input(message_text)
    current_state = bot_state.get_user_state(user_id)['state']

    print(f"–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: '{command}', —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: '{current_state}'")

    if command == 'start' or current_state == 'start':
        print("–ó–∞–ø—É—Å–∫ handle_start...")
        return handle_start(user_id, message_text)

    # ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

    elif command == 'add_to_favorites':
        return handle_add_to_favorites(user_id)

    elif command == 'favorites':
        return handle_show_favorites(user_id)

    elif command == 'next':
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ
        if user_id in bot_state.current_index:
            bot_state.current_index[user_id] += 1
        return show_next_profile(user_id)

    else:
        return "–ù–µ –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—É üò¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ!", get_main_keyboard()